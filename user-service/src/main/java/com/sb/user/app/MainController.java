package com.sb.user.app;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {

  private static final Logger LOG = LoggerFactory.getLogger(MainController.class);

  @Autowired // This means to get the bean called userRepository
  // Which is auto-generated by Spring, we will use it to handle the data
  //private SystemRepository systemRepository;

  @PostMapping
  String echo(@RequestBody String message) {
    LOG.info("Echoing message: {}", message);

    return String.format("%s... %s.. %s", message.toUpperCase(), message,
        message.toLowerCase());
  }

  /*@GetMapping("/user/{name}")
  public com.sb.user.model.System findByName(@PathVariable("name") String name) {
    LOGGER.info("User find: name={}", name);
    return systemRepository.findByName(name);
  }*/
}


/*@GetMapping(path="/add") // Map ONLY GET Requests
  public @ResponseBody String addNewUser (@RequestParam String name) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    System n = new System();
    n.setName(name);
    n.setLastaudit(new Date());
    systemRepository.save(n);
    return "Saved";
  }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<System> getAllUsers() {
    // This returns a JSON or XML with the users
    return systemRepository.findAll();
  }*/